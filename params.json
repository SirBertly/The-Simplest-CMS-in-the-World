{"name":"The-simplest-cms-in-the-world","tagline":"","body":"== Welcome to The Simplest CMS EVER!!\r\nThere are three basic sections to this site\r\n1) root => /: This is the page the application defaults to. It shows a menu with created pages and the first page of the list(database). If no page has been created yet, the first user will be redirected to the admin side to create a page\r\n2) blog => /blog. This is the blog side of the site. Admin is allowed to created a blog and leave a comment\r\n3) admin => /admin: This is the admin section if the site. admin is allowed to create a page, add components to a page, edit components, delete components,or re-order the components on the page.\r\n\r\nComponent: Using single table inheritance, I have implemented three basic types of components. \r\n    i)The basic component, this is basically a title and content\r\n    ii)The poll. Accepts a title and a poll question. \r\n    iii)The blog roll. this just accepts a title.\r\nThe basic component can be moved around the page(drag and drop) or resized.\r\nMenu on the user side, grows dynamically as pages are added.\r\nA Blog is included.\r\nComponents may be dragged across the page and resized.\r\n\r\nThere is no save. Once you are finished editing your page, go back to the page list. everything shall be saved. Not very intuitive, I know.\r\n\r\nBUGS:\r\n- A JQuery UI mis-function causes the component to fly to the bottom of the page when resized. But if you find it and pull it back it will work just fine.\r\n- I was trying STI for the first time, and while it is an amazing implementation of inheritance. It calls the generic component template the first time a component is rendered rather than the specific poll or recent blog template.\r\n- Code is not as DRY as I would like it to be.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}